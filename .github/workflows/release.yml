name: release
on: 
  push:
    tags:
      - "v*.*"

jobs:
  build-and-run-tests:
    name: Build & run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod
    - name: Build
      run: go build ./...
    - name: Run go vet
      run: go vet ./...
    - name: Run go tests
      run: go test -v ./...
    - name: Run go tests (-race)
      run: go test -race -v ./...
    - name: Build test docker image
      run: |
        touch version.sh
        docker build -t c2fmzq/tlsproxy:test .
        docker run --rm --interactive c2fmzq/tlsproxy:test -v

  create-release:
    name: Create release
    needs: build-and-run-tests
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod
    - name: Build release binaries
      run: |
        export CGO_ENABLED=0
        flag="-ldflags=-s -w -X main.Version=${GITHUB_REF_NAME}"
        for arch in amd64 arm arm64; do 
          GOARCH="${arch}" go build -trimpath "${flag}" -o "tlsproxy-linux-${arch}" ./proxy
          sha256sum "tlsproxy-linux-${arch}" | cut -d " " -f1 > "tlsproxy-linux-${arch}.sha256"
        done
    - name: Create release
      # https://github.com/softprops/action-gh-release/tree/v0.1.15
      uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
      with:
        draft: false
        generate_release_notes: true
        fail_on_unmatched_files: true
        files: |
          tlsproxy-linux-*

  push-to-registry:
    name: Push image to docker hub
    needs:
      - build-and-run-tests
      - create-release
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3
    - name: Log in to docker hub
      uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Get release version
      run: echo "VERSION=${GITHUB_REF_NAME}" > version.sh
    - name: Set up QEMU
      # https://github.com/docker/setup-qemu-action/releases/tag/v2.2.0
      uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7
    - name: Set up Docker Buildx
      # https://github.com/docker/setup-buildx-action/releases/tag/v2.9.1
      uses: docker/setup-buildx-action@4c0219f9ac95b02789c1075625400b2acbff50b1
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      # https://github.com/docker/metadata-action/releases/tag/v4.6.0
      uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
      with:
        images: c2fmzq/tlsproxy
    - name: Build and push docker image
      # https://github.com/docker/build-push-action/releases/tag/v4.1.1
      uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
